# B. Unique Bid Auction
# https://codeforces.com/problemset/problem/1454/B

# Существует игра под названием «Unique Bid Auction». Вы можете узнать про нее больше здесь:
# https://en.wikipedia.org/wiki/Unique_bid_auction (тем не менее, в этом нет необходимости для решения задачи).
#
# Давайте немного упростим эту игру. Формально, в игре есть n участников, i-й участник выбрал число ai.
# Победителем игры является тот участник, чье число уникально (то есть никто кроме него не выбрал это число) и
# минимально (то есть среди всех уникальных значений a минимальное из них является выигрышным).
#
# Ваша задача — найти индекс участника, который победил в игре (или же -1, если победителя нет).
# Индексы начинаются с 1, то есть участники пронумерованы от 1 до n.
#
# Вам необходимо ответить на t независимых наборов тестовых данных.
#
# Входные данные
# Первая строка входных данных содержит одно целое число t (1≤t≤2⋅104) — количество наборов тестовых данных.
# Затем следуют t наборов тестовых данных.
#
# Первая строка набора тестовых данных содержит одно целое число n (1≤n≤2⋅105) — количество участников.
# Вторая строка набора тестовых данных содержит n целых чисел a1,a2,…,an (1≤ai≤n), где ai равно числу, выбранному i-м участником.
#
# Гарантируется, что сумма n не превосходит 2⋅105 (∑n≤2⋅105).
#
# Выходные данные
# Выведите ответ на каждый набор тестовых данных — индекс участника, который победил в игре (или же -1, если победителя нет).
# Заметьте, что ответ всегда уникален.
#
# Пример
# входные данные
# 6
# 2
# 1 1
# 3
# 2 1 3
# 4
# 2 2 2 3
# 1
# 1
# 5
# 2 3 2 4 2
# 6
# 1 1 5 5 4 4
# выходные данные
# -1
# 2
# 4
# 1
# 2
# -1


from collections import Counter

t = int(input())

for _ in range(t):
    n = int(input())
    a = list(map(int, input().split()))
    c = Counter(a)

    if 1 not in c.values():
        print(-1)
    else:
        res = []
        for key in c:
            if c[key] == 1:
                res.append(key)
        print(a.index(min(res)) + 1)



