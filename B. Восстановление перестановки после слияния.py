
# B. Восстановление перестановки после слияния
# https://codeforces.com/problemset/problem/1385/B

# ограничение по времени на тест1 секунда
# ограничение по памяти на тест256 мегабайт
# вводстандартный ввод
# выводстандартный вывод
# Перестановкой длины n называется последовательность целых чисел от 1 до n длины n, содержащая каждое число ровно один раз.
# Например, [1], [4,3,5,1,2], [3,2,1] являются перестановками, а [1,1], [0,1], [2,2,1,4] — нет.
#
# Была задана перестановка p[1…n]. Она была слита сама с собой. Другими словами, были взяты две копии p и элементы
# второй копии p были вставлены в первую без изменения относительного порядка элементов. Результатом является последовательность длины 2n.
#
# Например, если p=[3,1,2], то некоторыми возможными результатами являются: [3,1,2,3,1,2], [3,3,1,1,2,2], [3,1,3,1,2,2].
# Следующие последовательности не являются возможными результатами слияния: [1,3,2,1,2,3], [3,1,2,3,2,1], [3,3,1,2,2,1].
#
# Например, если p=[2,1], то возможными результатами являются: [2,2,1,1], [2,1,2,1]. Следующие последовательности не
# являются возможными результатами слияния: [1,1,2,2], [2,1,1,2], [1,2,2,1].
#
# Ваша задача — восстановить перестановку p по заданной результирующий последовательности a. Гарантируется,
# что ответ существует и единственен.
#
# Вам необходимо ответить на t независимых наборов тестовых данных.
#
# Входные данные
# Первая строка теста содержит одно целое число t (1≤t≤400) — количество наборов тестовых данных.
# Затем следуют t наборов тестовых данных.
#
# Первая строка набора тестовых данных содержит одно целое число n (1≤n≤50) — длину перестановки.
# Вторая строка набора тестовых данных содержит 2n целых чисел a1,a2,…,a2n (1≤ai≤n), где ai — i-й элемент в a.
# Гарантируется, что массив a представляет собой результат слияния некоторой перестановки p с такой же перестановкой p.
#
# Выходные данные
# Для каждого набора тестовых данных выведите ответ на него: n целых чисел p1,p2,…,pn (1≤pi≤n),
# представляющих собой изначальную перестановку. Гарантируется, что ответ существует и единственен.
#
# Пример
# входные данные
# 5
# 2
# 1 1 2 2
# 4
# 1 3 1 4 3 4 2 2
# 5
# 1 2 1 2 3 4 3 5 4 5
# 3
# 1 2 3 1 2 3
# 4
# 2 3 2 4 1 3 4 1
# выходные данные
# 1 2
# 1 3 4 2
# 1 2 3 4 5
# 1 2 3
# 2 3 4 1

t = int(input())

for _ in range(t):
    n = int(input())
    a = tuple(map(int, input().split()))

    start_list = []

    for i in a:
        if i not in start_list:
            start_list.append(i)
    for i in start_list:
        print(i, end=' ')
    print()














