# B. Почти прямоугольник
# https://codeforces.com/problemset/problem/1512/B

# ограничение по времени на тест2 секунды
# ограничение по памяти на тест256 мегабайт
# вводстандартный ввод
# выводстандартный вывод
# На квадратном поле n×n отмечены две клетки. Они могут находиться в одной строке или столбце.
#
# Необходимо отметить еще две клетки так, чтобы они являлись углами какого-либо прямоугольника со сторонами,
# параллельными осям координат.
#
# Например, если n=4 и прямоугольное поле выглядит следующим образом (в отмеченных клетках находятся звездочки):
#
# ..∗.....∗.......
# То можно отметить еще две клетки следующим образом:
#
# ∗.∗.....∗.∗.....
# Если существует несколько возможных решений, то выведите любое.
#
# Входные данные
# В первой строке содержится одно целое число t (1≤t≤400). Далее следуют t наборов входных данных.
#
# В первой строке каждого набора входных данных находится целое число n (2≤n≤400) — количество строк и столбцов в таблице.
#
# В следующих n строках находится по n символов '.' или '*' обозначающих пустые и отмеченные клетки, соответственно.
#
# Гарантируется, что сумма n по всем наборам входных данных не превосходит 400.
#
# Гарантируется, что на поле есть ровно две звездочки. Они могут находиться в одной строке или столбце.
#
# Гарантируется, что решение существует.
#
# Выходные данные
# Для каждого набора входных данных выведите n строк по n символов — поле с четырьмя отмеченными звездочками,
# соответствующее условию. Если ответов несколько, то выведите любой из них.
#
# Пример
# входные данные
# 6
# 4
# ..*.
# ....
# *...
# ....
# 2
# *.
# .*
# 2
# .*
# .*
# 3
# *.*
# ...
# ...
# 5
# .....
# ..*..
# .....
# .*...
# .....
# 4
# ....
# ....
# *...
# *...
# выходные данные
# *.*.
# ....
# *.*.
# ....
# **
# **
# **
# **
# *.*
# *.*
# ...
# .....
# .**..
# .....
# .**..
# .....
# ....
# ....
# **..
# **..


for _ in range(int(input())):
    n = int(input())
    lst = []
    i1 = ''
    i2 = ''
    def some_code():
        a1 = ''
        a1 = a1.join(lst[0])

        for i in range(i1):
            print('.' * n)
        print(a1)
        for i in range(i2 - i1 - 1):
            print('.' * n)
        print(a1)
        for i in range(n - i2 - 1):
            print('.' * n)

    for i in range(n):
        a = list(input())
        if '*' not in a:
            continue
        if '*' in a and a.count('*') == 2:
            i1 = i
            lst.append(a)
        elif '*' in a and i1 == '':
            lst.append(a)
            i1 = i
            j1 = lst[0].index('*')
        elif '*' in a and i1 != '':
            lst.append(a)
            i2 = i
            j2 = lst[1].index('*')
    if i2 == '':
        if i1 == 0:
            a = ''
            a = a.join(lst[0])
            print(a)
            print(a)
            for i in range(n-2):
                print('.' * n)
        elif i1 == n-1:
            a = ''
            a = a.join(lst[0])
            for i in range(n-2):
                print('.' * n)
            print(a)
            print(a)
        else:
            a1 = ''
            a1 = a1.join(lst[0])

            for i in range(i1):
                print('.' * n)
            print(a1)
            print(a1)
            for i in range(n - i1 - 2):
                print('.' * n)

    elif j1 != j2:
        lst[0][j2] = '*'
        some_code()
    elif j1 == 0:
        lst[0][1] = '*'
        some_code()
    else:
        lst[0][j1-1] = '*'
        some_code()















